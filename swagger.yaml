---
swagger: '2.0'
info:
  version: 0.0.1
  title: Appuio Kubernetes API gateway
paths:
  /{clustername}/namespaces:
    get:
      tags:
        - namespace
      parameters:
        - name: clustername
          type: string
          required: true
          in: path
      produces:
        - application/json
      operationId: getManagedNamespaces
      responses:
        200:
          description: returns a list of namespaces
          schema:
            type: array
            description: list of namespaces
            items:
              $ref: '#/definitions/namespace'
  /{clustername}/namespace/{customer}/{name}:
    post:
      tags:
        - namespace
      parameters:
      - type: string
        format: string
        name: name
        in: path
        required: true
      - type: string
        format: string
        name: customer
        in: path
        required: true
      - name: body
        in: body
        schema:
          $ref: '#/definitions/namespace'
      - name: clustername
        type: string
        required: true
        in: path
      produces:
        - application/json
      consumes:
        - application/json
      operationId: updateManagedNamespace
      responses:
        200:
          description: deletes a single namespace
          schema:
            $ref: '#/definitions/namespace'
    delete:
      tags:
        - namespace
      parameters:
      - type: string
        format: string
        name: name
        in: path
        required: true
      - type: string
        format: string
        name: customer
        in: path
        required: true
      - name: clustername
        type: string
        required: true
        in: path
      produces:
        - application/json
      operationId: deleteManagedNamespace
      responses:
        200:
          description: deletes a single namespace
          schema:
            $ref: '#/definitions/namespace'
    get:
      tags:
        - namespace
      parameters:
      - type: string
        format: string
        name: name
        in: path
        required: true
      - type: string
        format: string
        name: customer
        in: path
        required: true
      - name: clustername
        type: string
        required: true
        in: path
      produces:
        - application/json
      operationId: getManagedNamespace
      responses:
        200:
          description: returns a single namespace
          schema:
            $ref: '#/definitions/namespace'
  /{clustername}/namespace/{customer}:
    put:
      tags:
        - namespace
      parameters:
      - name: clustername
        type: string
        required: true
        in: path
      - type: string
        format: string
        name: customer
        in: path
        required: true
      - name: body
        in: body
        schema:
          $ref: "#/definitions/namespace"
      produces:
        - application/json
      consumes:
        - application/json
      operationId: createManagedNamespace
      responses:
        200:
          description: create a new managed namespace
          schema:
            $ref: '#/definitions/namespace'
  /clusters:
    get:
      tags:
        - cluster
      produces:
        - application/json
      operationId: getAllClusters
      responses:
        200:
          description: returns all clusters
          schema:
            type: array
            items:
              $ref: '#/definitions/cluster'
  /cluster:
    put:
      tags:
        - cluster
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - name: body
        in: body
        schema:
          $ref: "#/definitions/cluster"
      operationId: registerCluster
      responses:
        200:
          description: registers a new cluster
          schema:
            $ref: '#/definitions/cluster'


definitions:
  namespace:
    type: object
    required:
      - name
      - customer
    properties:
      name:
        type: string
        minLength: 1
      description:
        type: string
        minLength: 1
      customer:
        type: string
        minLength: 1
  cluster:
    type: object
    required:
      - name
      - url
    properties:
      name:
        type: string
        minLength: 1
      url:
        type: string
        minLength: 1
      token:
        type: string
        minLength: 1
      version:
        type: string
